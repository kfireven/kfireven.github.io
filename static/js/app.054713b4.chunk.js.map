{"version":3,"sources":["webpack:///D:/Addinonal Data/Computer Science/Projects/react-native/WeatherApp-Kfir-Even-27-06-2021/src/components/Map/mapStyles.css?ce04","src/components/Map/mapStyles.css","webpack:///D:/Addinonal Data/Computer Science/Projects/react-native/WeatherApp-Kfir-Even-27-06-2021/src/components/InfoScreen/InfoScreenStyles.css?c57c","src/components/InfoScreen/InfoScreenStyles.css","webpack:///D:/Addinonal Data/Computer Science/Projects/react-native/WeatherApp-Kfir-Even-27-06-2021/src/components/FavoritesScreen/FavoritesScreenStyles.css?7a0a","src/components/FavoritesScreen/FavoritesScreenStyles.css","src/components/InfoScreen/InfoScreenReducers.js","src/components/FavoritesScreen/FavoritesScreenReducers.js","src/Store.js","src/components/Main/mainStyles.js","src/components/Map/Map.jsx","src/components/FavoritesScreen/FavoritesScreenActions.js","src/components/InfoScreen/InfoScreen.jsx","src/components/FavoritesScreen/FavoritesScreen.jsx","src/components/InfoScreen/InfoScreenActions.js","src/components/Main/Main.jsx","src/Apis.js","src/App.js"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","initialState","cityName","countryName","cityCode","temputure","weatherStatus","weatherDay1","weatherDay2","weatherDay3","weatherDay4","weatherDay5","favorites","isCurrentCityFavorite","reducers","combineReducers","infoScreen","state","action","type","favoritesScreen","favs","condition","store","createStore","applyMiddleware","thunk","mainStyles","StyleSheet","create","menuView","backgroundColor","position","width","height","mainView","top","left","borderTopLeftRadius","TextStyle","fontSize","fontWeight","letterSpacing","color","menuButtons","borderRadius","alignItems","justifyContent","cursor","INFObutton","marginTop","FAVSbutton","map","className","Component","removeFromFavorites","favToRemove","JSON","parse","localStorage","getItem","splice","indexOf","setItem","stringify","InfoScreen","props","newProps","this","isExistsInfavorites","city","includes","isCurrentCityFav","style","Button","onClick","addToFavorites","whiteSpace","split","connect","fav","FavoritesScreen","fillTable","clearFavTable","document","getElementById","remove","toogleView","fillWeatherInfo","LocalizedName","Country","Key","table","createElement","setAttribute","cssText","appendChild","row","insertRow","cell1","insertCell","cell2","favCityClickBtnId","removeFromFavBtnId","innerHTML","val","addEventListener","favCityClick","length","id","updateSelectedCityTempeture","res","Temperature","Metric","Value","WeatherText","updateFiveDayForecast","Days","Date","DailyForecasts","getDay","Maximum","Minimum","Main","data","query","isInfoView","bind","fillFavorites","values","selectedCityCountryNames","selectedCityTempeture","fiveDayForecast","setState","View","Autocomplete","disableClearable","forcePopupIcon","label","getOptionLabel","option","onInputChange","txt","q","target","value","fetch","then","response","json","catch","err","console","log","onChange","event","renderInput","params","TextField","variant","fullWidth","Pressable","title","onPress","Text","StatusBar","dispatch","locKey","App"],"mappings":"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","file":"static/js/app.054713b4.chunk.js","sourcesContent":["var api = require(\"!C:\\\\Users\\\\Kfir Even\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\style-loader\\\\dist\\\\runtime\\\\injectStylesIntoStyleTag.js\");\n            var content = require(\"!!C:\\\\Users\\\\Kfir Even\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!./mapStyles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"C:\\\\Users\\\\Kfir Even\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".map {\\r\\n    background-color: wheat;\\r\\n    width: 100%;\\r\\n    height: 33.333%;\\r\\n    border: 3px solid #C7C6C5;\\r\\n}\\r\\n\\r\\n.mapPlaceholderImg {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-image:url('https://ane4bf-datap1.s3-eu-west-1.amazonaws.com/wmocms/s3fs-public/ckeditor/files/W020170228643849857868.jpg?1sP39dGYftOles138YmsSSJraKAacnqZ');\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100% 100%;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!C:\\\\Users\\\\Kfir Even\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\style-loader\\\\dist\\\\runtime\\\\injectStylesIntoStyleTag.js\");\n            var content = require(\"!!C:\\\\Users\\\\Kfir Even\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!./InfoScreenStyles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"C:\\\\Users\\\\Kfir Even\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".infoScreen {\\r\\n    color: burlywood;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    padding: 5% 5%;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.weatherDays {\\r\\n    align-items: center;\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    height: 33.333%;\\r\\n    margin-top: 3%;\\r\\n}\\r\\n\\r\\n.infoscreenFirstRaw {\\r\\n    align-items: center;\\r\\n    margin-top: 3%;\\r\\n    height: 33.333%;\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.infoScreenFavBtn {\\r\\n    background-color:#4C4236;\\r\\n    color:white;\\r\\n    width: 33.333%;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!C:\\\\Users\\\\Kfir Even\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\style-loader\\\\dist\\\\runtime\\\\injectStylesIntoStyleTag.js\");\n            var content = require(\"!!C:\\\\Users\\\\Kfir Even\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!./FavoritesScreenStyles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"C:\\\\Users\\\\Kfir Even\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".favoritesScreen {\\r\\n    color: burlywood;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    padding: 5% 5%;\\r\\n    box-sizing: border-box;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","const initialState = {\r\n    cityName: '',\r\n    countryName: '',\r\n    cityCode: '',\r\n    temputure: '',\r\n    weatherStatus: '',\r\n    weatherDay1: '',\r\n    weatherDay2: '',\r\n    weatherDay3: '',\r\n    weatherDay4: '',\r\n    weatherDay5: '',\r\n};\r\n\r\nexport const infoScreen = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SELECTED_CITY_COUNTRY_NAME':\r\n            return Object.assign({}, state, { cityName: action.cityName, countryName: action.countryName, cityCode: action.cityCode });\r\n        case 'SELECTED_TEMP_STATUS':\r\n            return Object.assign({}, state, { temputure: action.temputure, weatherStatus: action.weatherStatus });\r\n        case 'FIVE_DAY_FORECAST':\r\n            return Object.assign({}, state, {\r\n                weatherDay1: action.weatherDay1,\r\n                weatherDay2: action.weatherDay2,\r\n                weatherDay3: action.weatherDay3,\r\n                weatherDay4: action.weatherDay4,\r\n                weatherDay5: action.weatherDay5,\r\n             });\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    favorites: '',\r\n    isCurrentCityFavorite: false\r\n};\r\n\r\nexport const favoritesScreen = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FILL_CITY_FAVORITE_LIST':\r\n            return Object.assign({}, state, { favorites: action.favs });\r\n        case 'REMOVE_CITY_FROM_FAVORITE_LIST':\r\n            return Object.assign({}, state, { favorites: action.favs });\r\n        case 'ADD_CITY_TO_FAVORITE_LIST':\r\n            return Object.assign({}, state, { favorites: action.favs });\r\n        case 'IS_CITY_IN_FAVORITE_LIST':\r\n            return Object.assign({}, state, { isCurrentCityFavorite: action.condition });\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { infoScreen } from \"./components/InfoScreen/InfoScreenReducers\";\r\nimport { favoritesScreen } from './components/FavoritesScreen/FavoritesScreenReducers';\r\n\r\nconst reducers = combineReducers({\r\n    infoScreen,\r\n    favoritesScreen\r\n});\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    {},\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","import { StyleSheet } from 'react-native'; \r\n\r\nexport const mainStyles = StyleSheet.create({\r\n    menuView: {\r\n        backgroundColor: '#A49E98',\r\n        position: 'relative',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    mainView: {\r\n        backgroundColor: 'black',\r\n        position: 'relative',\r\n        top: '13%',\r\n        left: '15%',\r\n        width: '85%',\r\n        height: '87%',\r\n        borderTopLeftRadius: '25px'\r\n    },\r\n    TextStyle: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: 'white',\r\n    },\r\n    menuButtons: {\r\n        left: 0,\r\n        width: '15%',\r\n        height: '10%',\r\n        borderRadius: 4,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 4,\r\n        backgroundColor: '#54514E',\r\n        position: 'absolute',\r\n        cursor: 'pointer'\r\n    },\r\n    INFObutton: {\r\n        marginTop: '20%'\r\n    },\r\n    FAVSbutton: {\r\n        marginTop: '30%'\r\n    }\r\n  });\r\n","import React, { Component } from 'react';\r\nimport './mapStyles.css';\r\n\r\nexport default class map extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"map\">\r\n                <div className=\"mapPlaceholderImg\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export const fillFavorites = favs => {\r\n    return {\r\n        type: 'FILL_CITY_FAVORITE_LIST',\r\n        favs\r\n    };\r\n};\r\n\r\nexport const removeFromFavorites = favToRemove => {\r\n    var favs = JSON.parse(localStorage.getItem(\"favorites\"));\r\n    favs.splice(favs.indexOf(favToRemove), 1);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favs));\r\n\r\n    return {\r\n        type: 'REMOVE_CITY_FROM_FAVORITE_LIST',\r\n        favs\r\n    };\r\n};\r\n\r\nexport const addToFavorites = fav => {\r\n    var favs = JSON.parse(localStorage.getItem(\"favorites\"));\r\n    favs.push(fav);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favs));\r\n\r\n    return {\r\n        type: 'ADD_CITY_TO_FAVORITE_LIST',\r\n        favs\r\n    };\r\n};\r\n\r\nexport const isCurrentCityFav = condition => {\r\n    return {\r\n        type: 'IS_CITY_IN_FAVORITE_LIST',\r\n        condition\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport Map from '../Map/Map';\r\nimport { addToFavorites, removeFromFavorites, isCurrentCityFav } from '../FavoritesScreen/FavoritesScreenActions';\r\n\r\nimport './InfoScreenStyles.css';\r\n\r\nclass InfoScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    };\r\n\r\n    componentDidUpdate(newProps) {\r\n        if (newProps.infoScreen.cityCode !== this.props.infoScreen.cityCode) {\r\n            this.isExistsInfavorites(this.props.infoScreen.cityName + ', ' + this.props.infoScreen.countryName + '-' + this.props.infoScreen.cityCode);\r\n        }\r\n    };\r\n\r\n    isExistsInfavorites(city) {\r\n        this.props.favoritesScreen.favorites.includes(city) ? this.props.isCurrentCityFav(true) : this.props.isCurrentCityFav(false);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"infoScreen\">\r\n                <Map/>\r\n                <div className=\"infoscreenFirstRaw\">\r\n                    <div style={{width: '33.333%'}}>\r\n                        <div style={{fontSize: '30px'}}>{this.props.infoScreen.cityName}</div>\r\n                        <div>{this.props.infoScreen.countryName}</div>\r\n                    </div>\r\n                    <div style={{width: '33.333%'}}>\r\n                        <div style={{fontSize: '22px'}}>{this.props.infoScreen.temputure} °</div>\r\n                        <div style={{fontSize: '22px'}}>{this.props.infoScreen.weatherStatus}</div>\r\n                    </div>\r\n                    {this.props.favoritesScreen.isCurrentCityFavorite ?\r\n                    <Button className=\"infoScreenFavBtn\" onClick={() => {\r\n                        this.props.removeFromFavorites(this.props.infoScreen.cityName + ', ' + this.props.infoScreen.countryName + '-' + this.props.infoScreen.cityCode);\r\n                        this.props.isCurrentCityFav(false);\r\n                    }}>Remove From Favorites</Button>\r\n                    : <Button className=\"infoScreenFavBtn\" onClick={() => {\r\n                        this.props.addToFavorites(this.props.infoScreen.cityName + ', ' + this.props.infoScreen.countryName + '-' + this.props.infoScreen.cityCode);\r\n                        this.props.isCurrentCityFav(true);\r\n                        }}>Add To Favorites</Button>}\r\n                </div>\r\n                <div className=\"weatherDays\">\r\n                    <div style={{width: '20%', whiteSpace: 'pre-line'}}>{this.props.infoScreen.weatherDay1.split('-')[0]+ '\\n\\n' + this.props.infoScreen.weatherDay1.split('-')[1] + ' °\\n' + this.props.infoScreen.weatherDay1.split('-')[2]+ ' °'}</div>\r\n                    <div style={{width: '20%', whiteSpace: 'pre-line'}}>{this.props.infoScreen.weatherDay2.split('-')[0]+ '\\n\\n' + this.props.infoScreen.weatherDay2.split('-')[1] + ' °\\n' + this.props.infoScreen.weatherDay2.split('-')[2]+ ' °'}</div>\r\n                    <div style={{width: '20%', whiteSpace: 'pre-line'}}>{this.props.infoScreen.weatherDay3.split('-')[0]+ '\\n\\n' + this.props.infoScreen.weatherDay3.split('-')[1] + ' °\\n' + this.props.infoScreen.weatherDay3.split('-')[2]+ ' °'}</div>\r\n                    <div style={{width: '20%', whiteSpace: 'pre-line'}}>{this.props.infoScreen.weatherDay4.split('-')[0]+ '\\n\\n' + this.props.infoScreen.weatherDay4.split('-')[1] + ' °\\n' + this.props.infoScreen.weatherDay4.split('-')[2]+ ' °'}</div>\r\n                    <div style={{width: '20%', whiteSpace: 'pre-line'}}>{this.props.infoScreen.weatherDay5.split('-')[0]+ '\\n\\n' + this.props.infoScreen.weatherDay5.split('-')[1] + ' °\\n' + this.props.infoScreen.weatherDay5.split('-')[2]+ ' °'}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        infoScreen: state.infoScreen,\r\n        favoritesScreen: state.favoritesScreen\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addToFavorites, removeFromFavorites, isCurrentCityFav })(InfoScreen);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport { removeFromFavorites } from './FavoritesScreenActions';\r\n\r\nimport './FavoritesScreenStyles.css';\r\n\r\nclass FavoritesScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fillTable(this.props.favoritesScreen.favorites);\r\n    }\r\n\r\n    componentDidUpdate(newProps) {\r\n        if (newProps.favoritesScreen.favorites !== this.props.favoritesScreen.favorites) {\r\n            this.clearFavTable();\r\n            this.fillTable(this.props.favoritesScreen.favorites);\r\n        }\r\n    }\r\n    \r\n    clearFavTable() {\r\n        document.getElementById(\"favtab\").remove();\r\n    }\r\n\r\n    favCityClick(fav) {\r\n        this.props.toogleView();\r\n        this.props.fillWeatherInfo({LocalizedName: fav.split(', ')[0], Country: { LocalizedName: fav.split(', ')[1].split('-')[0]}, Key: fav.split('-')[1]});\r\n    }\r\n\r\n    fillTable(favs) {\r\n        var table = document.createElement(\"TABLE\");\r\n        table.setAttribute(\"id\", \"favtab\");\r\n        table.style.cssText = 'width:100%;border-collapse:collapse;';\r\n\r\n        var container = document.getElementById(\"favtabCoontainer\");\r\n        container.appendChild(table);\r\n\r\n        for (var i = 0; i < favs.length; i++) {\r\n                var row = table.insertRow(i);\r\n                var cell1 = row.insertCell(0);\r\n                var cell2 = row.insertCell(1);\r\n\r\n                row.style.cssText = \"border:6px solid black;background-color:#958269;\";\r\n\r\n                const favCityClickBtnId = 'favCityClickBtn' + i;\r\n                const removeFromFavBtnId = 'removeFromFavBtn' + i;\r\n\r\n                cell1.innerHTML = '<Button id=\"' + favCityClickBtnId + '\" style=\"float:left;background-color:#4C4236;color:white;\">' + favs[i].split('-')[0] + '</Button>';\r\n                cell2.innerHTML = '<Button id=\"' + removeFromFavBtnId + '\" style=\"float:right;background-color:#4C4236;color:white;\">Remove From Favorites</Button>';\r\n\r\n                const val = favs[i];\r\n                document.getElementById(favCityClickBtnId).addEventListener(\"click\", () => this.favCityClick(val));\r\n                document.getElementById(removeFromFavBtnId).addEventListener(\"click\", () => this.props.removeFromFavorites(val));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"favtabCoontainer\" className=\"favoritesScreen\"/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    ({ favoritesScreen }) => {\r\n        return {\r\n            favoritesScreen\r\n        };\r\n    }\r\n    , { removeFromFavorites })(FavoritesScreen);","import { cityWeatherAPI, fiveDayCityWeatherAPI } from '../../Apis';\r\n\r\nexport const selectedCityCountryNames = (cityName, countryName, cityCode) => {\r\n    return {\r\n        type: 'SELECTED_CITY_COUNTRY_NAME',\r\n        cityName,\r\n        countryName,\r\n        cityCode\r\n    };\r\n};\r\n\r\nexport const selectedCityTempeture = cityCode =>\r\n    (dispatch) => {\r\n    cityWeatherAPI(cityCode).then(res => {\r\n        dispatch(updateSelectedCityTempeture(res));\r\n    });\r\n};\r\n\r\nexport const updateSelectedCityTempeture = res => {\r\n    return {\r\n        type: 'SELECTED_TEMP_STATUS',\r\n        temputure: res[0].Temperature.Metric.Value,\r\n        weatherStatus: res[0].WeatherText\r\n    };\r\n};\r\n\r\nexport const fiveDayForecast = cityCode => \r\n(dispatch) => {\r\n    fiveDayCityWeatherAPI(cityCode).then(res => {\r\n        dispatch(updateFiveDayForecast(res));\r\n    });\r\n};\r\n\r\nexport const updateFiveDayForecast = res => {\r\n    const Days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    return {\r\n        type: 'FIVE_DAY_FORECAST',\r\n        weatherDay1: Days[new Date(res.DailyForecasts[0].Date).getDay()] + '-Max: ' + res.DailyForecasts[0].Temperature.Maximum.Value +'-Min: ' + res.DailyForecasts[0].Temperature.Minimum.Value,\r\n        weatherDay2: Days[new Date(res.DailyForecasts[1].Date).getDay()] + '-Max: ' + res.DailyForecasts[1].Temperature.Maximum.Value +'-Min: ' + res.DailyForecasts[1].Temperature.Minimum.Value,\r\n        weatherDay3: Days[new Date(res.DailyForecasts[2].Date).getDay()] + '-Max: ' + res.DailyForecasts[2].Temperature.Maximum.Value +'-Min: ' + res.DailyForecasts[2].Temperature.Minimum.Value,\r\n        weatherDay4: Days[new Date(res.DailyForecasts[3].Date).getDay()] + '-Max: ' + res.DailyForecasts[3].Temperature.Maximum.Value +'-Min: ' + res.DailyForecasts[3].Temperature.Minimum.Value,\r\n        weatherDay5: Days[new Date(res.DailyForecasts[4].Date).getDay()] + '-Max: ' + res.DailyForecasts[4].Temperature.Maximum.Value +'-Min: ' + res.DailyForecasts[4].Temperature.Minimum.Value\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    View,\r\n    Pressable ,\r\n    Text\r\n  } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { mainStyles } from './mainStyles.js';\r\n\r\nimport { cityAutoCompleteAPI } from '../../Apis';\r\n\r\nimport InfoScreen from '../InfoScreen/InfoScreen';\r\nimport FavoritesScreen from '../FavoritesScreen/FavoritesScreen';\r\nimport { fillFavorites } from '../FavoritesScreen/FavoritesScreenActions';\r\nimport { selectedCityCountryNames, selectedCityTempeture, fiveDayForecast } from '../InfoScreen/InfoScreenActions';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            query: '',\r\n            isInfoView: true,\r\n        };\r\n\r\n        this.toogleView = this.toogleView.bind(this);\r\n        this.fillWeatherInfo = this.fillWeatherInfo.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"favorites\") == null) { // inital run add Tel Aviv City as defualt favorite\r\n            localStorage.setItem(\"favorites\", JSON.stringify(['Tel Aviv, Israel-215854']));\r\n        }\r\n\r\n        this.props.fillFavorites(JSON.parse(localStorage.getItem(\"favorites\")));\r\n\r\n        var favs = this.props.favoritesScreen.favorites;\r\n        if (favs == []) {\r\n            this.fillWeatherInfo({LocalizedName: 'Tel Aviv', Country: { LocalizedName:  'Israel'}, Key: '215854'});\r\n        } else {\r\n            this.fillWeatherInfo({LocalizedName: favs[0].split(', ')[0], Country: { LocalizedName:  favs[0].split(', ')[1].split('-')[0]}, Key: favs[0].split('-')[1]});\r\n        }\r\n    };\r\n\r\n    fillWeatherInfo(values) {\r\n        this.props.selectedCityCountryNames(values.LocalizedName, values.Country.LocalizedName, values.Key);\r\n        this.props.selectedCityTempeture(values.Key);\r\n        this.props.fiveDayForecast(values.Key);\r\n    }\r\n\r\n    toogleView() {\r\n        this.state.isInfoView ? this.setState({isInfoView: false}) : this.setState({isInfoView: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={mainStyles.menuView}>\r\n                {this.state.isInfoView ? <Autocomplete style={{ width: '80%', position: 'absolute', left: '20%', top: '1%' }}\r\n                    disableClearable\r\n                    forcePopupIcon={false}\r\n                    options={this.state.data}\r\n                    label={this.state.query}\r\n                    getOptionLabel={option => option.LocalizedName + ', ' + option.Country.LocalizedName}\r\n                    onInputChange={txt => { txt.target.value.length > 1 ? cityAutoCompleteAPI(txt.target.value).then(res => this.setState({data: res})) : this.state.data}}\r\n                    onChange={(event, values) => {\r\n                        this.fillWeatherInfo(values);\r\n                    }}\r\n                    renderInput={params => (\r\n                        <TextField {...params} label={'Search City'} variant=\"outlined\" fullWidth />\r\n                    )}\r\n                /> : null}\r\n                <Pressable\r\n                    style={[mainStyles.INFObutton, mainStyles.menuButtons]}\r\n                    title=\"INFO\"\r\n                    onPress={() => this.setState({isInfoView: true})}\r\n                >\r\n                <Text style={mainStyles.TextStyle}>INFO</Text>\r\n                </Pressable>\r\n                <Pressable\r\n                    style={[mainStyles.FAVSbutton, mainStyles.menuButtons]}\r\n                    title=\"FAVS\"\r\n                    onPress={() => this.setState({isInfoView: false})}\r\n                >\r\n                    <Text style={mainStyles.TextStyle}>FAVS</Text>\r\n                </Pressable>\r\n            <View style={mainStyles.mainView}>\r\n               {this.state.isInfoView ? <InfoScreen/> : <FavoritesScreen toogleView={this.toogleView} fillWeatherInfo={this.fillWeatherInfo}/>}\r\n               <StatusBar style=\"auto\" />\r\n            </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    ({ favoritesScreen }) => {\r\n        return {\r\n            favoritesScreen\r\n        };\r\n    }, { fillFavorites, selectedCityCountryNames, selectedCityTempeture, fiveDayForecast })(Main);","const accuweatherAPIkey = 'kCkqeNIqZtd15XlMY8kZM9AVAUMRVCuZ';\r\n\r\nexport function cityAutoCompleteAPI (q) {\r\n  return fetch('https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=' + accuweatherAPIkey + '&q=' + q)\r\n    .then((response) => { \r\n        return response.json().then((data) => {\r\n            return data;\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        }) \r\n    });\r\n    \r\n    // return [{\r\n    //     \"Version\": 1,\r\n    //     \"Key\": \"215854\",\r\n    //     \"Type\": \"City\",\r\n    //     \"Rank\": 31,\r\n    //     \"LocalizedName\": \"Tel Aviv\",\r\n    //     \"Country\": {\r\n    //       \"ID\": \"IL\",\r\n    //       \"LocalizedName\": \"Israel\"\r\n    //     },\r\n    //     \"AdministrativeArea\": {\r\n    //       \"ID\": \"TA\",\r\n    //       \"LocalizedName\": \"Tel Aviv\"\r\n    //     }\r\n    //   },\r\n    //   {\r\n    //     \"Version\": 1,\r\n    //     \"Key\": \"2158542\",\r\n    //     \"Type\": \"City\",\r\n    //     \"Rank\": 31,\r\n    //     \"LocalizedName\": \"Tel Aviv2\",\r\n    //     \"Country\": {\r\n    //       \"ID\": \"IL\",\r\n    //       \"LocalizedName\": \"Israel\"\r\n    //     },\r\n    //     \"AdministrativeArea\": {\r\n    //       \"ID\": \"TA\",\r\n    //       \"LocalizedName\": \"Tel Aviv2\"\r\n    //     }\r\n    //   }];\r\n}\r\n\r\nexport function cityWeatherAPI (locKey) {\r\n    return fetch('https://dataservice.accuweather.com/currentconditions/v1/' + locKey + '?apikey=' + accuweatherAPIkey)\r\n    .then((response) => { \r\n        return response.json().then((data) => {\r\n            return data;\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        }) \r\n    });\r\n    \r\n    // return {\r\n    //     \"LocalObservationDateTime\": \"2021-06-27T21:31:00+03:00\",\r\n    //     \"EpochTime\": 1624818660,\r\n    //     \"WeatherText\": \"Clear\",\r\n    //     \"WeatherIcon\": 33,\r\n    //     \"HasPrecipitation\": false,\r\n    //     \"PrecipitationType\": null,\r\n    //     \"IsDayTime\": false,\r\n    //     \"Temperature\": {\r\n    //       \"Metric\": {\r\n    //         \"Value\": 27.7,\r\n    //         \"Unit\": \"C\",\r\n    //         \"UnitType\": 17\r\n    //       },\r\n    //       \"Imperial\": {\r\n    //         \"Value\": 82,\r\n    //         \"Unit\": \"F\",\r\n    //         \"UnitType\": 18\r\n    //       }\r\n    //     },\r\n    //     \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\r\n    //     \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\"\r\n    //   };\r\n}\r\n\r\nexport function fiveDayCityWeatherAPI (locKey) {\r\n    return fetch('https://dataservice.accuweather.com/forecasts/v1/daily/5day/' + locKey + '?apikey=' + accuweatherAPIkey +'&metric=true')\r\n    .then((response) => { \r\n        return response.json().then((data) => {\r\n            return data;\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        }) \r\n    });\r\n\r\n    // return {\r\n    //     \"Headline\": {\r\n    //       \"EffectiveDate\": \"2021-06-27T20:00:00+03:00\",\r\n    //       \"EffectiveEpochDate\": 1624813200,\r\n    //       \"Severity\": 7,\r\n    //       \"Text\": \"Warm Sunday night\",\r\n    //       \"Category\": \"heat\",\r\n    //       \"EndDate\": \"2021-06-28T08:00:00+03:00\",\r\n    //       \"EndEpochDate\": 1624856400,\r\n    //       \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/extended-weather-forecast/215854?lang=en-us\",\r\n    //       \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?lang=en-us\"\r\n    //     },\r\n    //     \"DailyForecasts\": [\r\n    //       {\r\n    //         \"Date\": \"2021-06-27T07:00:00+03:00\",\r\n    //         \"EpochDate\": 1624766400,\r\n    //         \"Temperature\": {\r\n    //           \"Minimum\": {\r\n    //             \"Value\": 76,\r\n    //             \"Unit\": \"F\",\r\n    //             \"UnitType\": 18\r\n    //           },\r\n    //           \"Maximum\": {\r\n    //             \"Value\": 89,\r\n    //             \"Unit\": \"F\",\r\n    //             \"UnitType\": 18\r\n    //           }\r\n    //         },\r\n    //         \"Day\": {\r\n    //           \"Icon\": 1,\r\n    //           \"IconPhrase\": \"Sunny\",\r\n    //           \"HasPrecipitation\": false\r\n    //         },\r\n    //         \"Night\": {\r\n    //           \"Icon\": 33,\r\n    //           \"IconPhrase\": \"Clear\",\r\n    //           \"HasPrecipitation\": false\r\n    //         },\r\n    //         \"Sources\": [\r\n    //           \"AccuWeather\"\r\n    //         ],\r\n    //         \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\",\r\n    //         \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\"\r\n    //       },\r\n    //       {\r\n    //         \"Date\": \"2021-06-28T07:00:00+03:00\",\r\n    //         \"EpochDate\": 1624852800,\r\n    //         \"Temperature\": {\r\n    //           \"Minimum\": {\r\n    //             \"Value\": 77,\r\n    //             \"Unit\": \"F\",\r\n    //             \"UnitType\": 18\r\n    //           },\r\n    //           \"Maximum\": {\r\n    //             \"Value\": 89,\r\n    //             \"Unit\": \"F\",\r\n    //             \"UnitType\": 18\r\n    //           }\r\n    //         },\r\n    //         \"Day\": {\r\n    //           \"Icon\": 1,\r\n    //           \"IconPhrase\": \"Sunny\",\r\n    //           \"HasPrecipitation\": false\r\n    //         },\r\n    //         \"Night\": {\r\n    //           \"Icon\": 33,\r\n    //           \"IconPhrase\": \"Clear\",\r\n    //           \"HasPrecipitation\": false\r\n    //         },\r\n    //         \"Sources\": [\r\n    //           \"AccuWeather\"\r\n    //         ],\r\n    //         \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&lang=en-us\",\r\n    //         \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&lang=en-us\"\r\n    //       },\r\n    //       {\r\n    //         \"Date\": \"2021-06-29T07:00:00+03:00\",\r\n    //         \"EpochDate\": 1624939200,\r\n    //         \"Temperature\": {\r\n    //           \"Minimum\": {\r\n    //             \"Value\": 78,\r\n    //             \"Unit\": \"F\",\r\n    //             \"UnitType\": 18\r\n    //           },\r\n    //           \"Maximum\": {\r\n    //             \"Value\": 90,\r\n    //             \"Unit\": \"F\",\r\n    //             \"UnitType\": 18\r\n    //           }\r\n    //         },\r\n    //         \"Day\": {\r\n    //           \"Icon\": 1,\r\n    //           \"IconPhrase\": \"Sunny\",\r\n    //           \"HasPrecipitation\": false\r\n    //         },\r\n    //         \"Night\": {\r\n    //           \"Icon\": 33,\r\n    //           \"IconPhrase\": \"Clear\",\r\n    //           \"HasPrecipitation\": false\r\n    //         },\r\n    //         \"Sources\": [\r\n    //           \"AccuWeather\"\r\n    //         ],\r\n    //         \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&lang=en-us\",\r\n    //         \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&lang=en-us\"\r\n    //       },\r\n    //       {\r\n    //         \"Date\": \"2021-06-30T07:00:00+03:00\",\r\n    //         \"EpochDate\": 1625025600,\r\n    //         \"Temperature\": {\r\n    //           \"Minimum\": {\r\n    //             \"Value\": 77,\r\n    //             \"Unit\": \"F\",\r\n    //             \"UnitType\": 18\r\n    //           },\r\n    //           \"Maximum\": {\r\n    //             \"Value\": 89,\r\n    //             \"Unit\": \"F\",\r\n    //             \"UnitType\": 18\r\n    //           }\r\n    //         },\r\n    //         \"Day\": {\r\n    //           \"Icon\": 1,\r\n    //           \"IconPhrase\": \"Sunny\",\r\n    //           \"HasPrecipitation\": false\r\n    //         },\r\n    //         \"Night\": {\r\n    //           \"Icon\": 33,\r\n    //           \"IconPhrase\": \"Clear\",\r\n    //           \"HasPrecipitation\": false\r\n    //         },\r\n    //         \"Sources\": [\r\n    //           \"AccuWeather\"\r\n    //         ],\r\n    //         \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&lang=en-us\",\r\n    //         \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&lang=en-us\"\r\n    //       },\r\n    //       {\r\n    //         \"Date\": \"2021-07-01T07:00:00+03:00\",\r\n    //         \"EpochDate\": 1625112000,\r\n    //         \"Temperature\": {\r\n    //           \"Minimum\": {\r\n    //             \"Value\": 77,\r\n    //             \"Unit\": \"F\",\r\n    //             \"UnitType\": 18\r\n    //           },\r\n    //           \"Maximum\": {\r\n    //             \"Value\": 88,\r\n    //             \"Unit\": \"F\",\r\n    //             \"UnitType\": 18\r\n    //           }\r\n    //         },\r\n    //         \"Day\": {\r\n    //           \"Icon\": 1,\r\n    //           \"IconPhrase\": \"Sunny\",\r\n    //           \"HasPrecipitation\": false\r\n    //         },\r\n    //         \"Night\": {\r\n    //           \"Icon\": 33,\r\n    //           \"IconPhrase\": \"Clear\",\r\n    //           \"HasPrecipitation\": false\r\n    //         },\r\n    //         \"Sources\": [\r\n    //           \"AccuWeather\"\r\n    //         ],\r\n    //         \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&lang=en-us\",\r\n    //         \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&lang=en-us\"\r\n    //       }\r\n    //     ]\r\n    //   };\r\n}","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './Store';\nimport Main from './components/Main/Main';\n\nexport default class App extends Component {\n  render() {\n    return (\n        <Provider store={store}>\n        <Main/>\n        </Provider>\n    )\n  }\n}\n\n"],"sourceRoot":""}